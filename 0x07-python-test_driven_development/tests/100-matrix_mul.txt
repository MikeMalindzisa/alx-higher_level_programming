Tests for a function that multiplies 2 matrices.
Import the function
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Test Case 1: Optimal Pair of Matrices
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

Test Case 2: Optimal Pair of Matrices (Different Sizes)
    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

Test Case 3: m_a is Not a List
    >>> matrix_mul({'a': 1, 'b': '2'}, [[1, 2]])
    Traceback (most recent call last):
    TypeError: m_a must be a list or m_b must be a list

Test Case 4: m_b is Not a List
    >>> matrix_mul([[1, 2]], {'a': 1, 'b': '2'})
    Traceback (most recent call last):
    TypeError: m_b must be a list

Test Case 5: m_a is Not a List of Lists
    >>> matrix_mul([[1, 2.68], "Breakfast", 1], [[1, 2]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

Test Case 6: m_b is Not a List of Lists
    >>> matrix_mul([[1, 2]], [[1, 2.68], "Breakfast", 1])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

Test Case 7: Empty m_a
    >>> matrix_mul([[]], [[1, 2.68]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

Test Case 8: Empty m_b
    >>> matrix_mul([[1, 2.68]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

Test Case 9: Non-Integer or Non-Float Elements in m_a
    >>> matrix_mul([['a', 2]], [[1, 4], [5, 2]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

Test Case 10: Non-Integer or Non-Float Elements in m_b
    >>> matrix_mul([[1, 2]], [['a', 4], [5, 'b']])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

Test Case 11: Rows in m_a of Different Sizes
    >>> matrix_mul([[1, 2, 6], [3, 7, 9]], [[3, 4], [5, 6]])
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

Test Case 12: Rows in m_b of Different Sizes
    >>> matrix_mul([[[1, 2], [3, 7]], [[3, 4, 5], [5, 6, 7]])
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

Test Case 13: Matrices Cannot Be Multiplied
    >>> matrix_mul([[1, 2]], [[5, 6]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied


Pycodestyle Style Check:


1. Check for Pycodestyle compliance:

    >>> import os
    >>> os.popen("pycodestyle 100-matrix_mul.py").read()
    ''

