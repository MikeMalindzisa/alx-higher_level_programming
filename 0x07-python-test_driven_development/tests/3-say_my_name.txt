Tests for a function that prints My name is <first name> <last name>.

Import the function:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Test Case 1: Single Name (No Last Name):
    >>> say_my_name("Jose")
    My name is Jose 

Test Case 2: Empty First Name, Last Name Provided:
    >>> say_my_name("", "Doe")
    My name is  Doe

Test Case 3: Both arguments as empty strings:
    >>> say_my_name("", "")
    My name is  

Test for error Cases:

Test Case 4: First Argument as a Number:
    >>> say_my_name(1, "Doe")
    Traceback (most recent call last):
    TypeError: first_name must be a string

Test Case 5: Second Argument as a Number:
    >>> say_my_name("John", 1)
    Traceback (most recent call last):
    TypeError: last_name must be a string

Test Case 6: Both Arguments as None:
    >>> say_my_name(None, None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

Test Case 7: No arguments passed:
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Pycodestyle Style Check:

1. Check for Pycodestyle compliance:

    >>> import os
    >>> os.popen("pycodestyle 3-say_my_name.py").read()
    ''

